{"version":3,"sources":["components/live-tracking/LiveTracking.js"],"names":["LiveTracking","useState","devices","setDevices","React","useEffect","interval","setInterval","PUBLIC_API","get","then","res","console","log","data","parseFloat","lat","clearInterval","length","center","zoom","scrollWheelZoom","attribution","url","Array","from","map","device","idx","id","position","Number","lng","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","device__device_id","battery","signal_strength1","signal_strength2","speed"],"mappings":"6PAgDeA,UAvCM,WACjB,IACA,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,GAAlC,6BAWA,OAVAG,IAAMC,WAAU,WACZ,IAAMC,EAAWC,aAAY,WACzBC,IAAWC,IAAI,qBAAqBC,MAAK,SAACC,GACtCC,QAAQC,IAAI,WAAWF,EAAIG,MAC3BX,EAAWQ,EAAIG,KAAKA,MACpBF,QAAQC,IAAI,SAASE,WAAWJ,EAAIG,KAAKA,KAAK,GAAGE,WAEpD,KACL,OAAO,kBAAMC,cAAcX,MAC7B,IAEE,mCACKJ,EAAQgB,OAAO,GAAK,cAAC,IAAD,UACjB,cAAC,IAAD,UACI,8BACA,eAAC,IAAD,CAAcC,OAAQ,CAAC,QAAS,KAAOC,KAAM,EAAGC,iBAAiB,EAAjE,UACI,cAAC,IAAD,CACIC,YAAY,yEACZC,IAAI,uDAEPrB,EAAQgB,OAAO,GAAKM,MAAMC,KAAKvB,GAASwB,KAAI,SAACC,EAAOC,GAAR,OACzC,cAAC,IAAD,CAAQC,GAAID,EAAKE,SAAU,CAACC,OAAOJ,EAAOX,KAAKe,OAAOJ,EAAOK,MAAOC,KAAM,IAAIC,OAAK,CAACC,QAASC,IAAeC,SAAU,CAAC,GAAI,IAAKC,WAAY,CAAC,GAAI,MAAjJ,SACI,eAAC,IAAD,0BACiBX,EAAOY,kBAAkB,uBAD1C,YACyDZ,EAAOa,QADhE,KAC0E,uBAD1E,uBACqGb,EAAOc,iBAD5G,IAC8H,uBAD9H,sBACuJd,EAAOe,iBAAiB,uBAD/K,YAC8Lf,EAAOgB","file":"static/js/13.cf0068d7.chunk.js","sourcesContent":["import { CContainer, CRow } from '@coreui/react'\r\nimport React, { useState } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './leafletStyles.css'\r\nimport { PUBLIC_API } from 'src/config';\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\r\nimport {Icon} from 'leaflet'\r\n\r\nconst LiveTracking = () => {\r\n    const position = [51.505, -0.09]\r\n    const [devices,setDevices] = useState([])\r\n    const [count,setCount] = useState(0)\r\n    React.useEffect(()=>{\r\n        const interval = setInterval(() => {\r\n            PUBLIC_API.get('device/data/last/').then((res)=>{\r\n                console.log('response',res.data)\r\n                setDevices(res.data.data)\r\n                console.log('lat : ',parseFloat(res.data.data[0].lat))\r\n            })\r\n          }, 1000);\r\n        return () => clearInterval(interval);\r\n    },[])\r\n    return (\r\n        <>\r\n            {devices.length>0 && <CContainer>\r\n                <CRow>\r\n                    <div>\r\n                    <MapContainer center={[51.505, -0.09]} zoom={2} scrollWheelZoom={false}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        {devices.length>0 && Array.from(devices).map((device,idx)=>\r\n                            <Marker id={idx} position={[Number(device.lat),Number(device.lng)]} icon={new Icon({iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41]})}>\r\n                                <Popup>\r\n                                    Device ID : {device.device__device_id}<br/>Battery: {device.battery}. <br /> signal_strength1 : {device.signal_strength1} <br/> signal_strength2: {device.signal_strength2}<br/> speed : {device.speed}\r\n                                </Popup>\r\n                            </Marker>\r\n                        )}\r\n                    </MapContainer>\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveTracking"],"sourceRoot":""}